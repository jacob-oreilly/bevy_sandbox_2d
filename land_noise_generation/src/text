let point_something = j + (cols * i);
let point_something = i + (cols * j);
let point_something = i * (j - 1) * cols;

commands.spawn(MaterialMesh2dBundle {
    mesh: meshes.add(shape::Circle::new(2.0).into()).into(),
    material: materials.add(
        Color::rgba_linear(
            color_value * 255.0,
            color_value * 255.0,
            color_value * 255.0,
            color_value + 1.0,
        )
        .into(),
    ),
    transform: Transform::from_xyz(x_coord, y_coord, 0.0),
    ..default()
});


0011100101100000100111001001111111001001000010010110110011110110

0,0,1,1,1,0,0,1,0,1,1,0,0,0,0,0, //(0 - 15)
1,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1, //(16 - 31)
1,0,0,1,1,1,0,0,1,0,0,1,1,1,1,1, //(32 - 47)
0,1,1,0,1,1,0,0,1,1,1,1,0,1,1,0  //(48 - 63)




(64) vec![0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, ...]